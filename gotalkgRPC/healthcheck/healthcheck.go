// Code generated by goctl. DO NOT EDIT.
// Source: healthCheck.proto

package healthcheck

import (
	"context"

	"gotalk/gotalk"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	RequestHealthCheck  = gotalk.RequestHealthCheck
	ResponseHealthCheck = gotalk.ResponseHealthCheck

	HealthCheck interface {
		Health(ctx context.Context, in *RequestHealthCheck, opts ...grpc.CallOption) (*ResponseHealthCheck, error)
	}

	defaultHealthCheck struct {
		cli zrpc.Client
	}
)

func NewHealthCheck(cli zrpc.Client) HealthCheck {
	return &defaultHealthCheck{
		cli: cli,
	}
}

func (m *defaultHealthCheck) Health(ctx context.Context, in *RequestHealthCheck, opts ...grpc.CallOption) (*ResponseHealthCheck, error) {
	client := gotalk.NewHealthCheckClient(m.cli.Conn())
	return client.Health(ctx, in, opts...)
}
