// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"gotalk/gotalk"
	"gotalk/internal/logic"
	"gotalk/internal/svc"
)

type UserServiceServer struct {
	svcCtx *svc.ServiceContext
	gotalk.UnimplementedUserServiceServer
}

func NewUserServiceServer(svcCtx *svc.ServiceContext) *UserServiceServer {
	return &UserServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *UserServiceServer) Users(ctx context.Context, in *gotalk.RequestUser) (*gotalk.ResponseUsers, error) {
	l := logic.NewUsersLogic(ctx, s.svcCtx)
	return l.Users(in)
}

func (s *UserServiceServer) StartSession(ctx context.Context, in *gotalk.RequestWithUserName) (*gotalk.ResponseWithSessionId, error) {
	l := logic.NewStartSessionLogic(ctx, s.svcCtx)
	return l.StartSession(in)
}

func (s *UserServiceServer) CloseSession(ctx context.Context, in *gotalk.RequestWithSessionId) (*gotalk.ResponseUser, error) {
	l := logic.NewCloseSessionLogic(ctx, s.svcCtx)
	return l.CloseSession(in)
}
